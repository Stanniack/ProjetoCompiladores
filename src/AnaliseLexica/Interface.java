/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AnaliseLexica;

import AnaliseSintatica.Yylex;
import AnaliseSintatica.parser;
import com.sun.webkit.ContextMenu;
import java.awt.Component;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 12161003882
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interfae
     */
    public Interface() {
        initComponents();
        setLocationRelativeTo(null);

//       new Thread(t1).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaDeTexto = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        botaoLexico = new javax.swing.JButton();
        limpar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        analiseLexicaBox = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        arquivo = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        salvar = new javax.swing.JMenuItem();
        info = new javax.swing.JMenu();
        sobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        areaDeTexto.setColumns(20);
        areaDeTexto.setRows(5);
        areaDeTexto.setBorder(new Borda());
        jScrollPane1.setViewportView(areaDeTexto);

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Lexema", "Linha", "Coluna"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabela);

        botaoLexico.setText("Compilar");
        botaoLexico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLexicoActionPerformed(evt);
            }
        });

        limpar.setText("Limpar");
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        analiseLexicaBox.setColumns(20);
        analiseLexicaBox.setRows(5);
        jScrollPane3.setViewportView(analiseLexicaBox);

        jLabel1.setText("Análise Léxica");

        jLabel2.setText("Análise Sintática");

        arquivo.setText("Arquivo");

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        arquivo.add(jMenuItem1);

        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });
        arquivo.add(salvar);

        jMenuBar1.add(arquivo);

        info.setText("Informações");
        info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoActionPerformed(evt);
            }
        });

        sobre.setText("Sobre");
        sobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sobreActionPerformed(evt);
            }
        });
        info.add(sobre);

        jMenuBar1.add(info);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoLexico, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3)
                            .addComponent(jSeparator1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoLexico, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(limpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void botaoLexicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLexicoActionPerformed

        analiseLexicaBox.setText("");
        analiseLexicaBox.setText(analiseLexicaBox.getText() + "Análise léxica iniciada\n");

        boolean erro = false;

        try {

            String path = "C:\\Users\\fiodo\\OneDrive\\Documentos\\GitHub\\ProjetoCompiladores-master\\src\\AnaliseLexica\\Lexer.flex";

            gerarLexer(path);

            // Manda o código para o analisador léxico
            String texto = this.areaDeTexto.getText();
            Lexer lexer = new Lexer(new StringReader(texto));

            int linha = 1;
            int coluna = 0;

            //Cria registro e zera a tabela
            DefaultTableModel registros = (DefaultTableModel) tabela.getModel();
            registros.setRowCount(0);

            //Percorre todos os tokens
            Token token = lexer.yylex();
            while (token != null) {

                switch (token) {
                    case QUEBRA_LINHA:
                        linha++;
                        coluna = 0;
                        break;
                    case ESPACO:
                        coluna++;
                        break;
                    case ERRO:
                        Object[] erros = {token, lexer.lexeme, linha, coluna};
                        //adiciona nas linhas da tabela
                        registros.addRow(erros);

                        erro = true;
                        break;
                    default:

                        Object[] linhas = {token, lexer.lexeme, linha, coluna};
                        //adiciona nas linhas da tabela
                        registros.addRow(linhas);

                        coluna += lexer.yylength();
                        break;
                }
                //Incrementador de lexemas
                token = lexer.yylex();
            }

        } catch (Exception e) {
            System.out.println("Erro durante a execução do código");
        }

        if (!erro) {

            analiseLexicaBox.setText(analiseLexicaBox.getText() + "Analise lexica concluída com sucesso!\n");
            analiseLexicaBox.setText(analiseLexicaBox.getText() + "Analise sintatica iniciada\n");

            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }

            parser p = new parser(new Yylex(new StringReader(areaDeTexto.getText())));

            try {
                p.parse();
                analiseLexicaBox.setText(analiseLexicaBox.getText() + "Analise sintatica concluida com sucesso!");

            } catch (Exception ex) {
                Symbol s = p.getS();
                this.analiseLexicaBox.setText("Erro sintatico - Linha: " + (s.right + 1) + " - Token: " + s.value + "\n");
            }

        } else {
            analiseLexicaBox.setText(analiseLexicaBox.getText() + "Erro léxico encontrado.\n");
        }


    }//GEN-LAST:event_botaoLexicoActionPerformed

    // JmenuItem Arquivo ->  JmenuItem Abrir
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        // Abrir seletor de arquivos
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Procurar Arquivo");

        fileChooser.setFileFilter(new javax.swing.filechooser.FileFilter() {

            public boolean accept(File f) {
                return (f.getName().endsWith(".pht")) || f.isDirectory();
            }

            public String getDescription() {
                return "*.pht";
            }

        });

        // abre o seletor de arquivos
        int retorno = fileChooser.showOpenDialog(this);

        // Ao clicar em um arquivo selecionado
        if (retorno == JFileChooser.APPROVE_OPTION) {

            // Joga para um file o arquivo selecionado 
            File file = fileChooser.getSelectedFile();

            try {
                // Lê o arquivo
                String texto = new String(Files.readAllBytes(Paths.get(file.getPath())), "ISO-8859-1");
                // Manda texto para a área de texto
                areaDeTexto.setText(texto);
            } catch (IOException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
        areaDeTexto.setText("");
        analiseLexicaBox.setText("");
        DefaultTableModel registros = (DefaultTableModel) tabela.getModel();
        registros.setRowCount(0);
    }//GEN-LAST:event_limparActionPerformed

    private void infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoActionPerformed


    }//GEN-LAST:event_infoActionPerformed

    private void sobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sobreActionPerformed
        String msg = "| Projeto didático para a disciplina de Compiladores | "
                + "\n| 7º período - 2019 - Ciência da Computação |"
                + "\n| Professor Rodrigo César Evangelista |"
                + "\n| If Sul de Minas - Campus Muzambinho MG |"
                + "\n| Anderson Faria, Mateus Celestino |";
        String title = "Projeto de Compiladores";
        JOptionPane.showMessageDialog(null, msg, title, 1);
    }//GEN-LAST:event_sobreActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        this.salvar();
    }//GEN-LAST:event_salvarActionPerformed

    public static void gerarLexer(String path) {
        File file = new File(path);
        jflex.Main.generate(file);

    }

    public void salvar() {
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("Text File", "txt");
        final JFileChooser saveAsFileChooser = new JFileChooser();
        saveAsFileChooser.setApproveButtonText("Save");
        saveAsFileChooser.setFileFilter(extensionFilter);
        int actionDialog = saveAsFileChooser.showOpenDialog(this);
        if (actionDialog != JFileChooser.APPROVE_OPTION) {
            return;
        }

        File file = saveAsFileChooser.getSelectedFile();
        if (!file.getName().endsWith(".pht")) {
            file = new File(file.getAbsolutePath() + ".pht");
        }

        BufferedWriter outFile = null;
        try {
            outFile = new BufferedWriter(new FileWriter(file));

            areaDeTexto.write(outFile);
            JOptionPane.showMessageDialog(null, "Salvo com sucesso", "Info", 1);

        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            if (outFile != null) {
                try {
                    outFile.close();
                } catch (IOException e) {
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea analiseLexicaBox;
    private javax.swing.JTextArea areaDeTexto;
    private javax.swing.JMenu arquivo;
    private javax.swing.JButton botaoLexico;
    private javax.swing.JMenu info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton limpar;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JMenuItem salvar;
    private javax.swing.JMenuItem sobre;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
